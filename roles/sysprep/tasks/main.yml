---
- name: ensure unattend panther and temp directory exists
  win_file:
    path: '{{item}}'
    state: directory
  with_items:
  - C:\Windows\Panther\Unattend
  - C:\temp

- name: download the Ansible ConfigureRemotingForAnsible.ps1 script
  win_get_url:
    url: https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1
    dest: C:\temp\ConfigureRemotingForAnsible.ps1

- name: template the unattend.xml file
  win_template:
    src: unattend.xml.tmpl
    dest: C:\Windows\Panther\Unattend\unattend.xml

- name: copy across the sysprep powershell script
  win_copy:
    src: setup.ps1
    dest: C:\temp\setup.ps1

- name: add run once script, to run once vagrant initialises and start the sysprep
  win_regedit:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce
    name: sysprep
    data: C:\windows\system32\sysprep\sysprep.exe /generalize /oobe /quiet /reboot /unattend:C:\Windows\Panther\Unattend\unattend.xml
    type: string
    state: present

- name: create scheduled task to delete WinRM listeners and shutdown
  win_scheduled_task:
    name: packer-shutdown
    username: SYSTEM
    disallow_start_if_on_batteries: no
    stop_if_going_on_batteries: no
    actions:
    - path: powershell.exe
      arguments: Remove-Item -Path WSMan:\localhost\Listener\* -Recurse -Force
    - path: cmd.exe
      arguments: /c shutdown /s /t 5
    - path: schtasks.exe
      arguments: /Delete /TN "packer-shutdown" /F

- name: set flag to recreate pagefile after next sysprep
  win_shell: |
    $system = Get-WmiObject -Class Win32_ComputerSystem -EnableAllPrivileges
    if ($system -ne $null) {
        $system.AutomaticManagedPagefile = $true
        $system.Put()
    }
